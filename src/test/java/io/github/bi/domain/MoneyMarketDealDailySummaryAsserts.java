package io.github.bi.domain;

/*-
 * Money Market Bi - BI Microservice for Money Market Bi deals is part of the Granular Bi System
 * Copyright Â© 2025 Edwin Njeru (mailnjeru@gmail.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

import static io.github.bi.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class MoneyMarketDealDailySummaryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMoneyMarketDealDailySummaryAllPropertiesEquals(
        MoneyMarketDealDailySummary expected,
        MoneyMarketDealDailySummary actual
    ) {
        assertMoneyMarketDealDailySummaryAutoGeneratedPropertiesEquals(expected, actual);
        assertMoneyMarketDealDailySummaryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMoneyMarketDealDailySummaryAllUpdatablePropertiesEquals(
        MoneyMarketDealDailySummary expected,
        MoneyMarketDealDailySummary actual
    ) {
        assertMoneyMarketDealDailySummaryUpdatableFieldsEquals(expected, actual);
        assertMoneyMarketDealDailySummaryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMoneyMarketDealDailySummaryAutoGeneratedPropertiesEquals(
        MoneyMarketDealDailySummary expected,
        MoneyMarketDealDailySummary actual
    ) {
        assertThat(actual)
            .as("Verify MoneyMarketDealDailySummary auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMoneyMarketDealDailySummaryUpdatableFieldsEquals(
        MoneyMarketDealDailySummary expected,
        MoneyMarketDealDailySummary actual
    ) {
        assertThat(actual)
            .as("Verify MoneyMarketDealDailySummary relevant properties")
            .satisfies(a -> assertThat(a.getReportDate()).as("check reportDate").isEqualTo(expected.getReportDate()))
            .satisfies(a -> assertThat(a.getLedger()).as("check ledger").isEqualTo(expected.getLedger()))
            .satisfies(a -> assertThat(a.getNumberOfDeals()).as("check numberOfDeals").isEqualTo(expected.getNumberOfDeals()))
            .satisfies(a ->
                assertThat(a.getTotalPrincipal())
                    .as("check totalPrincipal")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(expected.getTotalPrincipal())
            )
            .satisfies(a ->
                assertThat(a.getInterestAccrued())
                    .as("check interestAccrued")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(expected.getInterestAccrued())
            )
            .satisfies(a ->
                assertThat(a.getTotalPVFull())
                    .as("check totalPVFull")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(expected.getTotalPVFull())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMoneyMarketDealDailySummaryUpdatableRelationshipsEquals(
        MoneyMarketDealDailySummary expected,
        MoneyMarketDealDailySummary actual
    ) {
        // empty method
    }
}
